{"version":3,"sources":["components/Contacts/Contacts.module.scss","components/Filter/Filter.module.scss","App.module.scss","components/Container/Container.module.scss","redux/phonebook/phonebook-operations.js","components/Container/Container.js","redux/phonebook/phonebook-selectors.js","components/Form/Form.js","redux/phonebook/phonebook-actions.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","redux/phonebook/phonebook-reducers.js","redux/store.js","index.js","components/Form/Form.module.scss"],"names":["module","exports","fetchContacts","createAsyncThunk","_","a","rejectWithValue","axios","get","data","message","addContact","name","phone","post","deleteContact","id","delete","Container","children","style","container","getContacts","state","phonebook","contacts","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","Form","useState","setName","setPhone","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","className","form","onSubmit","preventDefault","find","contact","alert","contactOperations","list","item","input","type","pattern","title","onChange","placeholder","required","cut","label","htmlFor","button","changeFilter","createAction","Filter","wrapper","Contacts","map","number","onClick","onDeleteContact","App","useEffect","app","createReducer","fulfilled","payload","loading","pending","rejected","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5876d8a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__k0PdV\",\"item\":\"Contacts_item__3rb4n\",\"name\":\"Contacts_name__Yqw86\",\"number\":\"Contacts_number__1GvcE\",\"button\":\"Contacts_button__2GU19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__541f3\",\"input\":\"Filter_input__274ft\",\"cut\":\"Filter_cut__1BB00\",\"label\":\"Filter_label__vwwds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1HT7T\",\"title\":\"App_title__GTd8D\",\"app-title-spin\":\"App_app-title-spin__3y-sA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1L6pD\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchContacts = createAsyncThunk(\n  'contact/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(\n        //  \"https://61e42cd7fbee6800175eb21d.mockapi.io/contacts\"\n        'https://61ec3caaf3011500174d2116.mockapi.io/contacts',\n      );\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contact/addContact',\n\n  async (name, phone, rejectWithValue) => {\n    try {\n      const { data } = await axios.post(\n        // \"https://61e42cd7fbee6800175eb21d.mockapi.io/contacts\",\n        'https://61ec3caaf3011500174d2116.mockapi.io/contacts',\n        name,\n        phone,\n      );\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contact/deleteContact',\n\n  async (id, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.delete(\n        // `https://61e42cd7fbee6800175eb21d.mockapi.io/contacts/${id}`,\n        `https://61ec3caaf3011500174d2116.mockapi.io/contacts/${id}`,\n      );\n      return data.id;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\n// ======= Vanilla async\n\n//  export const fetchContacts = () => async (dispatch) => {\n//   dispatch(fetchContactsRequest());\n\n//   try {\n//     const { data } = await axios.get(\n//       \"https://61e42cd7fbee6800175eb21d.mockapi.io/contacts\"\n//     );\n//     console.log(data)\n//     dispatch(fetchContactsSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactsReject(error.message));\n//   }\n\n//   //   axios\n//   //     .get(\"https://61e42cd7fbee6800175eb21d.mockapi.io/contacts\")\n//   //     .then(({ data }) => dispatch(fetchContactSuccess(data)))\n//   //     .catch((error) => dispatch(fetchContactReject(error)));\n// };\n\n// export const addContact = createAsyncThunk(\n//   'contact/addContact',\n//   async (name,phone) => {\n//      const {data}=await  axios\n//     .post(\"https://61e42cd7fbee6800175eb21d.mockapi.io/contacts\",\n//       {name},\n//       phone,\n//     )\n//     return data\n//   }\n// )\n\n// export const addContact = (name, phone) => async dispatch => {\n//   // const contact={name,phone}\n//     dispatch(addContactRequest());\n//     try {\n//         const {data}=await  axios\n//     .post(\"https://61e42cd7fbee6800175eb21d.mockapi.io/contacts\", {\n//       name,\n//       phone,\n//     })\n//       console.log(data)\n//        dispatch(addContactSuccess(data))\n//     }\n//     catch (error) {\n//         dispatch(addContactReject(error))\n//     }\n\n// //   axios\n// //     .post(\"https://61e42cd7fbee6800175eb21d.mockapi.io/contacts\", {\n// //       name,\n// //       phone,\n// //     })\n// //     .then(({ data }) => dispatch(addContactSuccess(data)))\n// //     .catch((error) => dispatch(addContactReject(error)));\n// };\n\n// export const deleteContact = (id) => async dispatch => {\n//   dispatch(deleteContactRequest());\n//   axios\n//     .delete(`https://61e42cd7fbee6800175eb21d.mockapi.io/contacts/${id}`)\n//     .then(() => dispatch(deleteContactSuccess(id)))\n//     .catch((error) => dispatch(deleteContactReject(error)));\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Container.module.scss';\n\nconst Container = ({ children }) => {\n  <div className={style.container}>{children}</div>;\n};\n\nexport default Container;\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","export const getContacts = state => state.phonebook.contacts;\nexport const getFilter = state => state.phonebook.filter;\nexport const getSpinner = state => state.phonebook.spinner;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\n// import { addContact } from \"../../redux/phonebook/phonebook-operations\";\nimport { contactOperations } from '../../redux/phonebook';\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\nimport style from './Form.module.scss';\n\nfunction Form() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setPhone(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // const existsContact = contacts.find(contact => name === contact.name);\n\n    if (contacts.find(contact => name === contact.name)) {\n      return alert(`The subscriber: ${name} - already exists!`);\n    }\n    if (contacts.find(contact => phone === contact.phone)) {\n      return alert(\n        `This number: ${phone} - has already been assigned to the subscriber!`,\n      );\n    }\n    dispatch(contactOperations.addContact({ name, phone }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <ul className={style.list}>\n        <li className={style.item}>\n          <input\n            className={style.input}\n            id=\"name\"\n            type=\"text\"\n            name=\"subscriber\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer!\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\" \"\n            required\n          />\n          <div className={style.cut}></div>\n          <label className={style.label} htmlFor=\"name\">\n            Name\n          </label>\n        </li>\n\n        <li className={style.item}>\n          <input\n            className={style.input}\n            id=\"phone\"\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with + !\"\n            value={phone}\n            onChange={handleChange}\n            placeholder=\" \"\n            required\n          />\n          <div className={style.cut}></div>\n          <label className={style.label} htmlFor=\"phone\">\n            Phone\n          </label>\n        </li>\n      </ul>\n\n      <button className={style.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n\n/*\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport actions from '../../redux/phonebook/actions';\nimport CONFIG from '../../data/formConfig.json';\nimport style from './ContactsForm.module.scss';\n\nexport default function Phonebook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    name === 'name' && setName(value);\n    name === 'number' && setNumber(value);\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    name && number !== '' && dispatch(actions.addContact(name, number));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <ul className={style.list}>\n        {CONFIG.map(field => (\n          <li key={field.name} className={style.item}>\n            <input\n              className={style.input}\n              id={field.type}\n              type={field.type}\n              name={field.name}\n              pattern={field.pattern}\n              title={field.title}\n              value={{ name, number }[field.name]}\n              onChange={handleChange}\n              placeholder=\" \"\n              required\n            />\n            <div className={style.cut}></div>\n            <label className={style.label} htmlFor={field.type}>\n              {field.name}\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button className={style.button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nCONFIG.PropTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n*/\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contact/changeFilter');\n\n// ======= Redux toolkit actions\n// export const fetchContactsRequest = createAction(\"contact/fetchContactRequest\")\n// export const fetchContactsSuccess = createAction(\"contact/fetchContactSuccess\")\n// export const fetchContactsReject = createAction(\"contact/fetchContactReject\")\n// export const addContactRequest = createAction(\"contact/addContactRequest\")\n// export const addContactSuccess = createAction(\"contact/addContactSuccess\")\n// export const addContactReject = createAction(\"contact/addContactReject\")\n// export const deleteContactRequest = createAction(\"contact/deleteContactRequest\")\n// export const deleteContactSuccess = createAction(\"contact/deleteContactSuccess\")\n// export const deleteContactReject=createAction(\"contact/deleteContactReject\")\n\n// ======== Vanilla redux\n// export const addContact = (id, name, number) => ({\n//   type: types.ADD,\n//   payload: { id, name, number },\n// });\n// export const deleteContact = (contactId) => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n// export const changeFilter = (value) => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\nimport style from './Filter.module.scss';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <div className={style.wrapper}>\n      <input\n        className={style.input}\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        placeholder=\" \"\n      />\n      <div className={style.cut}></div>\n      <label className={style.label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n// const mapStateToProps = (state) => ({\n//   value: state.phonebook.filter,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onChange: (e) => dispatch(changeFilter(e.currentTarget.value)),\n// });\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactOperations } from '../../redux/phonebook';\nimport {\n  getVisibleContacts,\n  getContacts,\n} from '../../redux/phonebook/phonebook-selectors';\nimport style from './Contacts.module.scss';\n\nconst Contacts = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(contactOperations.deleteContact(id));\n  };\n  return (\n    <>\n      <ul className={style.list}>\n        {contacts.map(({ id, name, phone }) => (\n          <li key={id} className={style.item}>\n            <p className={style.name}>{name}:</p>\n            <p className={style.number}>{phone}</p>\n            <button\n              onClick={() => onDeleteContact(id)}\n              className={style.button}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Contacts;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactOperations } from './redux/phonebook';\nimport Container from './components/Container';\n// import Section from './components/Section';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport Contacts from './components/Contacts';\nimport style from './App.module.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main className={style.app}>\n      <Container>\n        <h1 className={style.title}>Phonebook</h1>\n        <Form />\n        <h2 className={style.title}>Contacts</h2>\n        <Filter />\n        <Contacts />\n      </Container>\n    </main>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './phonebook-actions';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './phonebook-operations';\n\nconst contacts = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n\n//Vanilla redux\n// const contacts = (state = initialContacts, { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [payload, ...state];\n//     case types.DELETE:\n//       return state.filter((contact) => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n","// ====== ВАРИАНТ с Redux Toolkit, заморочено ======\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport phonebookReducer from './phonebook/phonebook-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nexport const store = configureStore({\n  reducer: {\n    phonebook: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// ======= Vanilla Redux\n\n// const rootReducer = combineReducers({\n//   phonebook: persistReducer(contactsPersistConfig, phonebookReducer),\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2P73r\",\"list\":\"Form_list__29RJG\",\"item\":\"Form_item__KJMzj\",\"input\":\"Form_input__1BLE4\",\"cut\":\"Form_cut__1HuNt\",\"label\":\"Form_label__hYydV\",\"button\":\"Form_button__1OilX\"};"],"sourceRoot":""}